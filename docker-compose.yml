version: "3.9"

services:
# ──────────────────────────── infrastructure ────────────────────────────
  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    command:
      - "--providers.file.filename=/dynamic/traefik_dynamic.yml"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./certs:/certs:ro"                       # ← наши .pem
      - "./traefik_dynamic.yml:/dynamic/traefik_dynamic.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

# ──────────────────────────── application ───────────────────────────────
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: vpn
      POSTGRES_PASSWORD: vpn
      POSTGRES_DB: vpn
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "vpn"]
      interval: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: server/Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "npx prisma migrate deploy &&
             node dist/index.js"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.services.api.loadbalancer.server.port=4000"
      - "traefik.http.routers.api.middlewares=strip-api"
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"

  frontend:
    build:
      context: .
      dockerfile: src/Dockerfile        # ← ваш Dockerfile с Vite-сборкой
    env_file: .env
    depends_on:
      backend:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=le"
      - "traefik.http.services.front.loadbalancer.server.port=80"

volumes:
  postgres-data:
  le_data:
