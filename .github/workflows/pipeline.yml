name: CI
on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run lint
      - run: npm test

  build-docker:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: docker build -t ghcr.io/${{ github.repository_owner }}/vpn-api ./server
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - run: docker push ghcr.io/${{ github.repository_owner }}/vpn-api
      - run: docker compose up -d --build frontend
      - name: Purge CDN cache
        run: curl -X POST ${{ secrets.CDN_PURGE_URL }}

  deploy-staging:
    needs: build-docker
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-prod:
    needs: build-docker
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - run: kubectl set image deployment/vpn-api vpn-api=ghcr.io/${{ github.repository_owner }}/vpn-api:$GITHUB_SHA
      - run: kubectl set image deployment/vpn-frontend vpn-frontend=ghcr.io/${{ github.repository_owner }}/vpn-frontend:$GITHUB_SHA
        
